/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  IfcStvBarChart,
} from './interfaces/IfcStvBarChart';
import {
  IfcStvLineChart,
} from './interfaces/IfcStvLineChart';

export namespace Components {
  interface StvBarChart {
    'axisLabelFontSize': number;
    'axisTickFontSize': number;
    'barStroke': string;
    'barStrokeWidth': number;
    'canvasHeight': number;
    'canvasWidth': number;
    'chartData': IfcStvBarChart[];
    'chartId': string;
    'colorScheme': string;
    'gridlines': boolean;
    'hideXAxis': boolean;
    'hideXTicks': boolean;
    'hideYAxis': boolean;
    'hideYTicks': boolean;
    'legend': boolean;
    'legendFontSize': number;
    'legendMetric': string;
    'legendWidth': number;
    'linearMetric': string;
    'linearTickFormat': string;
    'marginBottom': number;
    'marginLeft': number;
    'marginRight': number;
    'marginTop': number;
    'maxBarWidth': number;
    'ordinalMetric': string;
    'orientation': string;
    'responsive': boolean;
    'tooltips': boolean;
    'xLabel': string;
    'xTickSize': number;
    'yLabel': string;
    'yTickSize': number;
  }
  interface StvLineChart {
    'axisLabelFontSize': number;
    'axisTickFontSize': number;
    'canvasHeight': number;
    'canvasWidth': number;
    'chartData': IfcStvLineChart[];
    'chartId': string;
    'colorScheme': string;
    'hideXAxis': boolean;
    'hideXTicks': boolean;
    'hideYAxis': boolean;
    'hideYTicks': boolean;
    'legend': boolean;
    'legendFontSize': number;
    'legendMetric': string;
    'legendWidth': number;
    'marginBottom': number;
    'marginLeft': number;
    'marginRight': number;
    'marginTop': number;
    'responsive': boolean;
    'strokeWidth': number;
    'tooltips': boolean;
    'vertices': boolean;
    'xLabel': string;
    'xMetric': string;
    'xTickFormat': string;
    'xTickSize': number;
    'yLabel': string;
    'yMetric': string;
    'yTickFormat': string;
    'yTickSize': number;
  }
}

declare global {


  interface HTMLStvBarChartElement extends Components.StvBarChart, HTMLStencilElement {}
  var HTMLStvBarChartElement: {
    prototype: HTMLStvBarChartElement;
    new (): HTMLStvBarChartElement;
  };

  interface HTMLStvLineChartElement extends Components.StvLineChart, HTMLStencilElement {}
  var HTMLStvLineChartElement: {
    prototype: HTMLStvLineChartElement;
    new (): HTMLStvLineChartElement;
  };
  interface HTMLElementTagNameMap {
    'stv-bar-chart': HTMLStvBarChartElement;
    'stv-line-chart': HTMLStvLineChartElement;
  }
}

declare namespace LocalJSX {
  interface StvBarChart extends JSXBase.HTMLAttributes<HTMLStvBarChartElement> {
    'axisLabelFontSize'?: number;
    'axisTickFontSize'?: number;
    'barStroke'?: string;
    'barStrokeWidth'?: number;
    'canvasHeight'?: number;
    'canvasWidth'?: number;
    'chartData'?: IfcStvBarChart[];
    'chartId'?: string;
    'colorScheme'?: string;
    'gridlines'?: boolean;
    'hideXAxis'?: boolean;
    'hideXTicks'?: boolean;
    'hideYAxis'?: boolean;
    'hideYTicks'?: boolean;
    'legend'?: boolean;
    'legendFontSize'?: number;
    'legendMetric'?: string;
    'legendWidth'?: number;
    'linearMetric'?: string;
    'linearTickFormat'?: string;
    'marginBottom'?: number;
    'marginLeft'?: number;
    'marginRight'?: number;
    'marginTop'?: number;
    'maxBarWidth'?: number;
    'onStv-bar-chart-loaded'?: (event: CustomEvent<any>) => void;
    'ordinalMetric'?: string;
    'orientation'?: string;
    'responsive'?: boolean;
    'tooltips'?: boolean;
    'xLabel'?: string;
    'xTickSize'?: number;
    'yLabel'?: string;
    'yTickSize'?: number;
  }
  interface StvLineChart extends JSXBase.HTMLAttributes<HTMLStvLineChartElement> {
    'axisLabelFontSize'?: number;
    'axisTickFontSize'?: number;
    'canvasHeight'?: number;
    'canvasWidth'?: number;
    'chartData'?: IfcStvLineChart[];
    'chartId'?: string;
    'colorScheme'?: string;
    'hideXAxis'?: boolean;
    'hideXTicks'?: boolean;
    'hideYAxis'?: boolean;
    'hideYTicks'?: boolean;
    'legend'?: boolean;
    'legendFontSize'?: number;
    'legendMetric'?: string;
    'legendWidth'?: number;
    'marginBottom'?: number;
    'marginLeft'?: number;
    'marginRight'?: number;
    'marginTop'?: number;
    'onStv-line-chart-loaded'?: (event: CustomEvent<any>) => void;
    'responsive'?: boolean;
    'strokeWidth'?: number;
    'tooltips'?: boolean;
    'vertices'?: boolean;
    'xLabel'?: string;
    'xMetric'?: string;
    'xTickFormat'?: string;
    'xTickSize'?: number;
    'yLabel'?: string;
    'yMetric'?: string;
    'yTickFormat'?: string;
    'yTickSize'?: number;
  }

  interface IntrinsicElements {
    'stv-bar-chart': StvBarChart;
    'stv-line-chart': StvLineChart;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


